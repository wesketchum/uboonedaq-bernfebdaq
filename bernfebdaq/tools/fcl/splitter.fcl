# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

# This FhiCL document will create "events_to_generate" events,
# dividing the events into two root files, "splitter_even.root", if
# "N" for the "N"th event processed is even, and "splitter_odd.root"
# for the other events.

events_to_generate: 20
run_number: 101

fragment_receiver: {

   # Parameters defining and configuring the fragment generator to be used
   		    
   generator: ToySimulator 
   fragment_type: TOY2        # Make sure downstream modules know about this fragment_type!
   nADCcounts: 100
   random_seed: 6514

   # Parameters configuring the fragment generator's parent class
   # artdaq::CommandableFragmentGenerator

   fragment_id: 0
   board_id: 0
}  		  

event_builder: {

  expected_fragments_per_event: 1
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
}

######################################################################
# The ART code
######################################################################

physics:
{

  filters:
  {
    filterEven: {
      module_type: Prescaler
      prescaleFactor: 2
      prescaleOffset: 0
     }

    filterOdd: {
      module_type: Prescaler
      prescaleFactor: 2
      prescaleOffset: 1
    }
  } 	

  endpath: [ evenOutput, oddOutput ]
  evenpath: [ filterEven ]
  oddpath: [ filterOdd ]   # Think this is the same as "!filterEven"

  trigger_paths: [ evenpath, oddpath ]
  end_paths: [ endpath ]
}

outputs:
{
  evenOutput:
  {
    module_type: RootOutput
    fileName: "splitter_even.root"
    compressionLevel: 0

    SelectEvents: { SelectEvents: [ evenpath ] }
  }

  oddOutput:
  {
    module_type: RootOutput
    fileName: "splitter_odd.root"
    compressionLevel: 0

    SelectEvents: { SelectEvents: [ oddpath ] }
  }
}

source:
{
module_type: RawInput
waiting_time: 900
resume_after_timeout: true
fragment_type_map: [[3, "V1720"], [4, "V1724"], [6, "TOY1"], [7, "TOY2"] ]
}

process_name: Driver



